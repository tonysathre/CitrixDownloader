name: PowerShell Core Tests

on:
  [push, pull_request]

jobs:
  pester-powershell-core:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    env:
      CITRIXUSERNAME: ${{ secrets.CITRIXUSERNAME }}
      CITRIXPASSWORD: ${{ secrets.CITRIXPASSWORD }}
      PROXY_USER:     ${{ secrets.PROXY_USER }}
      PROXY_PASSWORD: ${{ secrets.PROXY_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Setup Squid Proxy Server (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update 
          sudo DEBIAN_FRONTEND=noninteractive apt-get install squid apache2-utils -y
          sudo touch /etc/squid/htpasswd
          sudo touch /var/log/squid/access.log
          sudo chown proxy:proxy /var/log/squid/access.log
          sudo chown proxy:proxy /etc/squid/htpasswd
          sudo chown proxy:proxy /etc/squid/squid.conf
          sudo -u proxy chmod 777 /etc/squid/squid.conf
          sudo -u proxy chmod 777 /var/log/squid/access.log
          sudo -u proxy htpasswd -b /etc/squid/htpasswd $PROXY_USER $PROXY_PASSWORD
          sudo -u proxy echo 'auth_param basic program /usr/lib/squid3/basic_ncsa_auth /etc/squid/htpasswd' >> /etc/squid/squid.conf
          sudo -u proxy echo 'auth_param basic realm proxy' >> /etc/squid/squid.conf
          sudo -u proxy echo 'acl authenticated proxy_auth REQUIRED' >> /etc/squid/squid.conf
          sudo -u proxy echo 'http_access allow authenticated' >> /etc/squid/squid.conf
          sudo -u proxy sed -i -e 's|# access_log daemon:/var/log/squid/access.log|access_log daemon:/var/log/squid/access.log|' /etc/squid/squid.conf
          sudo service squid start
        shell: bash
      
      - name: Setup Squid Proxy Server (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install squid
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri https://chilkatdownload.com/9.5.0.89/chilkatdotnet48-9.5.0-x64.zip -OutFile $env:TEMP\chilkatdotnet48-9.5.0-x64.zip
          Expand-Archive $env:TEMP\chilkatdotnet48-9.5.0-x64.zip -DestinationPath $env:TEMP\ -Force
          Add-Type -Path "$env:TEMP\chilkatdotnet48-9.5.0-x64\ChilkatDotNet48.dll"
          $crypt = New-Object Chilkat.Crypt2
          $bcryptHash = $crypt.BCryptHash($env:PROXY_PASSWORD)
          New-Item -Type File C:\Squid\etc\squid\users.htpasswd
          New-Item -Type File C:\Squid\etc\squid\access.log
          'auth_param basic program /lib/squid/basic_ncsa_auth.exe C:\Squid\etc\squid\users.htpasswd' | Out-File -Append C:\Squid\etc\squid\squid.conf
          'auth_param basic realm proxy' | Out-File -Append C:\Squid\etc\squid.conf
          'acl authenticated proxy_auth REQUIRED' | Out-File -Append C:\Squid\etc\squid\squid.conf
          'http_access allow authenticated' | Out-File -Append C:\Squid\etc\squid\squid.conf
          'access_log C:\Squid\etc\squid\access.log combined' | Out-File -Append C:\Squid\etc\squid\squid.conf
          "$env:PROXY_USER:$bcryptHash" | Out-File C:\Squid\etc\squid\users.htpasswd
          Start-Service squidsrv
        shell: pwsh

      - name: Setup Squid Proxy Server (MacOS)
        if: runner.os == 'macOS'
        run: |
          brew install squid
        shell: bash
        
      - name: Run Pester Tests for PowerShell Core
        run: |
          Set-PSRepository psgallery -InstallationPolicy trusted
          Install-Module -Name Pester -RequiredVersion 5.3.1 -Confirm:$false -Force
          Invoke-Pester -Path .\tests\ -Output Diagnostic
        shell: pwsh

      - name: Get Squid Access Log (Linux)
        if: runner.os == 'Linux'
        run: |
          cat /etc/squid/access.log
        shell: bash
        
      - name: Get Squid Access Log (Windows)
        if: runner.os == 'Windows'
        run: |
          Get-Content C:\Squid\etc\squid\access.log
        shell: pwsh
